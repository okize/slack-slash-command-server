#!/usr/bin/env node

const http = require('http');
const debug = require('debug')('slack-slash-command-server');
const app = require('../app');
const normalizePort = require('../lib/normalizePort');
const port = normalizePort(process.env.PORT || '9000');
const server = http.createServer(app);
const appName = 'Slack Slash Server';

// listen on provided port, on all network interfaces.
app.set('port', port);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// listener for error events
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// listener for server init
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('\n%s listening on %s\n', appName, bind);
}
